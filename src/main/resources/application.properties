# 127.0.0.1:8080/BOOT1/
server.port = 8084
server.servlet.context-path = /TEST202

# 소스코드 변경 시 자동으로 서버 구동하기
spring.devtools.livereload.enabled=true

# h2 (임베디드 DB, 개발용 DB)
spring.datasource.driver-class-name=org.h2.Driver
# spring.datasource.url=jdbc:h2:file:D:/JAVA/h2db;MODE=Oracle
spring.datasource.url=jdbc:h2:tcp://1.234.5.158:21521/ds216;MODE=Oracle
spring.datasource.username=sa
spring.datasource.password=
# 서버로 배포시 오류 방지용
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true

spring.datasource.hikari.connection-test-query=SELECT 1 FROM DUAL
spring.datasource.hikari.connection-timeout=600000
spring.datasource.hikari.maximum-pool-size=500
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.minimum-idle=20
spring.datasource.hikari.validation-timeout=3000
spring.datasource.hikari.idle-timeout=60000

# create => 서버 시작시 DDL자동 생성
# create-drop => 자동생성+자동삭제
# update  => 변경항목만 적용
# invalidate => 정상 매핑만 확인
# none => 아무작업 없음
spring.jpa.hibernate.ddl-auto=none


# xml mapper의 위치 설정
mybatis.mapper-locations=classpath:/mappers/*Mapper.xml

# dto의 위치 설정
# 여러개는 ,로 구분해서 설정
mybatis.type-aliases-package=com.example.dto

# view에 해당하는 html의 위치 설정
# cache = false 개발 시, 서비스 배포 시에는 true
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# 이미지 크기 제한 설정
spring.servlet.multipart.maxFileSize=10MB
spring.servlet.multipart.maxRequestSize=10MB